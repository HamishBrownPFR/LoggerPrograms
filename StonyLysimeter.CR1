'Program to control soil moisture and temperature measurements for the stony soil lysimeters
'Still needs tipping spoons programed in.  C2 and C3 reserved for this in input to be bussed into C1 with CS650's
'Version 0.1
Dim LCount
Public CS650(96,6)'96 CS650's each recording 6 variables (using the "M3!" command)
Public Drain(24)
Public BattV
Public PTemp_C
Public AirTC						
Public RH						
Public SlrkW						
Public SlrMJ						
Public Rain_mm						
Public WS_ms

DataTable (StonyLysimeters,1,-1)      'DataTable(Name, TrigVar, Size) See page 128 of CR1000 manual for description
  DataInterval (0,15,Min,2)       'DataInterval(TintoInt, Interval, Units, Lapses) See page 129 of CR1000 manual for description
  Average(1,BattV,FP2,False)	
  Average(1,PTemp_C,FP2,False)  
  Sample (576,CS650(),IEEE4)
  Totalize(24,Drain(),FP2,False)					
  Average(1,AirTC,FP2,False)					
  Maximum(1,RH,FP2,False,False)					
  Average(1,SlrkW,FP2,False)					
  Totalize(1,SlrMJ,IEEE4,False)					
  Totalize(1,Rain_mm,FP2,False)					
  Average(1,WS_ms,FP2,False)		 'Sample(Reps, Source, DataType)
EndTable
BeginProg
SequentialMode
Scan (15,Min,0,0)
  
  Battery(BattV) 'Default Datalogger Battery Voltage measurement 'BattV'
  PanelTemp(PTemp_C,_60Hz)  'Default Wiring Panel Temperature measurement 'PTemp_C'

  'Default Datalogger Battery Voltage measurement 'BattV'				
		Battery(BattV)				
		'Default Wiring Panel Temperature measurement 'PTemp_C'				
		PanelTemp(PTemp_C,_60Hz)				
		'CS500 Temperature & Relative Humidity Sensor measurements 'AirTC' and 'RH'.  VoltSe(Dest, Reps, Range, SEChan, MeasOffset, SettlingTime, Integ, Mult, Offset)				
		VoltSE(AirTC,1,mV2500,9,0,0,_60Hz,0.1,-40)				
		VoltSE(RH,1,mV2500,10,0,0,_60Hz,0.1,0)				
		If (RH>100) And (RH<108) Then RH=100				
		'LI200X Pyranometer measurements 'SlrMJ' and 'SlrkW'.  Voltdiff(Dest, Reps, Range, DiffChan, RevDiff, SettlingTime, Integ, Mult, Ofset)				
		VoltDiff(SlrkW,1,mV7_5,6,True,0,_60Hz,1,0)				
		If SlrkW<0 Then SlrkW=0				
		SlrMJ=SlrkW*0.06				
		SlrkW=SlrkW*0.2				
		'Generic Tipping Bucket Rain Gauge measurement 'Rain_mm'.  PulseCount(Dest, Reps, Pchan, Pconfig, Poption, Mult, Offset)				
		PulseCount(Rain_mm,1,1,2,0,1,0)				
		'NRG #40 Wind Speed Sensor measurements 'WS_ms'.  PulseCount(Dest, Reps, Pchan, Pconfig, Poption, Mult, Offset)				
		PulseCount(WS_ms,1,2,2,1,0.765,0.35)				
		If WS_ms<0.36 Then WS_ms=0				
		  
  
  PortSet(4,1) 'Turn MUX1 and associated CS650's ON!!.  Connect multiplexor reset and relay for 650's power to com port 4
      Delay(0,3,Sec) 'Allow CS650's to warm up
      LCount=1
      SubScan(0,mSec,24)'  SubScan(SubInterval, Units, Count) Count is the number no. of TDRs Leaving 650 mSec between each scan to allow SDI-12 function to excicute
        PulsePort(8,10000) 'Switch to next AM16/32 channel.  Connect multiplexor clock to Com port 8
        SDI12Recorder (CS650(LCount,1),1,0,"M3!",1.0,0) 'SDI12Recorder(Dest, SDIPort, SDIAddress, SDICommand, Multiplier, Offset)  All CS650's have an SDI address of 0 and all the sensor leads from MUXs are bused into C1
        LCount=LCount+1
      NextSubScan
  PortSet(4,0) 'Turn MUX1 and associated CS650's OFF!!
    Delay(0,150,mSec) 'Wait a bit between multiplexors
  PortSet(5,1) 'Turn MUX2 and associated CS650's ON!!.  Connect multiplexor reset and relay for 650's power to com port 5
    Delay(0,3,Sec) 'Allow CS650's to warm up
      SubScan(0,mSec,24)'  SubScan(SubInterval, Units, Count) Count is the number no. of TDRs
        PulsePort(8,10000) 'Switch to next AM16/32 channel.  Connect multiplexor clock to Com port 8
        SDI12Recorder (CS650(LCount,1),1,0,"M3!",1.0,0) 'SDI12Recorder(Dest, SDIPort, SDIAddress, SDICommand, Multiplier, Offset)  All CS650's have an SDI address of 0 and all the sensor leads from MUXs are bused into C1
        LCount=LCount+1
      NextSubScan
  PortSet(5,0) 'Turn MUX2 and associated CS650's OFF!!
    Delay(0,150,mSec) 'Wait a bit between multiplexors
  PortSet(6,1) 'Turn MUX3 and associated CS650's ON!!.  Connect multiplexor reset and relay for 650's power to com port 6
    Delay(0,3,Sec) 'Allow CS650's to warm up
      SubScan(0,mSec,24)'  SubScan(SubInterval, Units, Count) Count is the number no. of TDRs
        PulsePort(8,10000) 'Switch to next AM16/32 channel.  Connect multiplexor clock to Com port 8
        SDI12Recorder (CS650(LCount,1),1,0,"M3!",1.0,0) 'SDI12Recorder(Dest, SDIPort, SDIAddress, SDICommand, Multiplier, Offset)  All CS650's have an SDI address of 0 and all the sensor leads from MUXs are bused into C1
        LCount=LCount+1
      NextSubScan
  PortSet(6,0) 'Turn MUX3 and associated CS650's OFF!!
    Delay(0,150,mSec) 'Wait a bit between multiplexors
  PortSet(7,1) 'Turn MUX4 and associated CS650's ON!!.  Connect multiplexor reset and relay for 650's power to com port 7
    Delay(0,3,Sec) 'Allow CS650's to warm up
      SubScan(650,mSec,24)'  SubScan(SubInterval, Units, Count) Count is the number no. of TDRs
        PulsePort(8,10000) 'Switch to next AM16/32 channel.  Connect multiplexor clock to Com port 8
        SDI12Recorder (CS650(LCount,1),1,0,"M3!",1.0,0) 'SDI12Recorder(Dest, SDIPort, SDIAddress, SDICommand, Multiplier, Offset)  All CS650's have an SDI address of 0 and all the sensor leads from MUXs are bused into C1
        LCount=LCount+1
      NextSubScan
  PortSet(7,0) 'Turn MUX4 and associated CS650's OFF!!
    Delay(0,150,mSec) 'Wait a bit between multiplexors
CallTable StonyLysimeters 'Call Data Table
NextScan
EndProg
